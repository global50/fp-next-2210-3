"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("middleware",{

/***/ "(middleware)/./src/middleware.ts":
/*!***************************!*\
  !*** ./src/middleware.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   middleware: () => (/* binding */ middleware)\n/* harmony export */ });\n/* harmony import */ var _supabase_ssr__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/ssr */ \"(middleware)/./node_modules/@supabase/ssr/dist/module/index.js\");\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/server */ \"(middleware)/./node_modules/next/dist/esm/api/server.js\");\n\n\nconst allowedPaths = [\n    '/',\n    '/auth',\n    '/profile',\n    '/settings',\n    '/chats'\n];\nasync function middleware(request) {\n    let supabaseResponse = next_server__WEBPACK_IMPORTED_MODULE_1__.NextResponse.next({\n        request\n    });\n    const supabase = (0,_supabase_ssr__WEBPACK_IMPORTED_MODULE_0__.createServerClient)(\"https://mepmbkoqbmzomtilnsbx.supabase.co\", process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY, {\n        cookies: {\n            getAll () {\n                return request.cookies.getAll();\n            },\n            setAll (cookiesToSet) {\n                cookiesToSet.forEach(({ name, value })=>request.cookies.set(name, value));\n                supabaseResponse = next_server__WEBPACK_IMPORTED_MODULE_1__.NextResponse.next({\n                    request\n                });\n                cookiesToSet.forEach(({ name, value, options })=>supabaseResponse.cookies.set(name, value, options));\n            }\n        }\n    });\n    // Обновление сессии, чтобы предотвратить истечение\n    const { data: { user } } = await supabase.auth.getUser();\n    // Защищенные маршруты - требуют авторизации\n    const protectedRoutes = [];\n    const isProtectedRoute = protectedRoutes.some((route)=>request.nextUrl.pathname.startsWith(route));\n    // Редирект неавторизованных пользователей с защищенных маршрутов\n    if (!user && isProtectedRoute) {\n        const url = request.nextUrl.clone();\n        url.pathname = '/auth';\n        return next_server__WEBPACK_IMPORTED_MODULE_1__.NextResponse.redirect(url);\n    }\n    // Редирект авторизованных пользователей с /auth на главную\n    if (user && request.nextUrl.pathname === '/auth') {\n        const url = request.nextUrl.clone();\n        url.pathname = '/';\n        return next_server__WEBPACK_IMPORTED_MODULE_1__.NextResponse.redirect(url);\n    }\n    return supabaseResponse;\n}\nconst config = {\n    matcher: [\n        /*\n     * Match all request paths except for the ones starting with:\n     * - _next/static (static files)\n     * - _next/image (image optimization files)\n     * - favicon.ico (favicon file)\n     * - public files (images, etc.)\n     */ \"/((?!_next/static|_next/image|favicon.ico|\\\\.next|.*\\\\.(?:svg|png|jpg|jpeg|gif|webp)$).*)\"\n    ]\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vc3JjL21pZGRsZXdhcmUudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFrRDtBQUNVO0FBRzVELE1BQU1FLGVBQWU7SUFBQztJQUFLO0lBQVM7SUFBWTtJQUFhO0NBQVM7QUFFL0QsZUFBZUMsV0FBV0MsT0FBb0I7SUFDbkQsSUFBSUMsbUJBQW1CSixxREFBWUEsQ0FBQ0ssSUFBSSxDQUFDO1FBQ3ZDRjtJQUNGO0lBRUEsTUFBTUcsV0FBV1AsaUVBQWtCQSxDQUNqQ1EsMENBQW9DLEVBQ3BDQSxRQUFRQyxHQUFHLENBQUNFLDZCQUE2QixFQUN6QztRQUNFQyxTQUFTO1lBQ1BDO2dCQUNFLE9BQU9ULFFBQVFRLE9BQU8sQ0FBQ0MsTUFBTTtZQUMvQjtZQUNBQyxRQUFPQyxZQUFZO2dCQUNqQkEsYUFBYUMsT0FBTyxDQUFDLENBQUMsRUFBRUMsSUFBSSxFQUFFQyxLQUFLLEVBQUUsR0FBS2QsUUFBUVEsT0FBTyxDQUFDTyxHQUFHLENBQUNGLE1BQU1DO2dCQUNwRWIsbUJBQW1CSixxREFBWUEsQ0FBQ0ssSUFBSSxDQUFDO29CQUNuQ0Y7Z0JBQ0Y7Z0JBQ0FXLGFBQWFDLE9BQU8sQ0FBQyxDQUFDLEVBQUVDLElBQUksRUFBRUMsS0FBSyxFQUFFRSxPQUFPLEVBQUUsR0FDNUNmLGlCQUFpQk8sT0FBTyxDQUFDTyxHQUFHLENBQUNGLE1BQU1DLE9BQU9FO1lBRTlDO1FBQ0Y7SUFDRjtJQUdGLG1EQUFtRDtJQUNuRCxNQUFNLEVBQ0pDLE1BQU0sRUFBRUMsSUFBSSxFQUFFLEVBQ2YsR0FBRyxNQUFNZixTQUFTZ0IsSUFBSSxDQUFDQyxPQUFPO0lBRS9CLDRDQUE0QztJQUM1QyxNQUFNQyxrQkFBa0IsRUFBRTtJQUMxQixNQUFNQyxtQkFBbUJELGdCQUFnQkUsSUFBSSxDQUFDQyxDQUFBQSxRQUM1Q3hCLFFBQVF5QixPQUFPLENBQUNDLFFBQVEsQ0FBQ0MsVUFBVSxDQUFDSDtJQUd0QyxpRUFBaUU7SUFDakUsSUFBSSxDQUFDTixRQUFRSSxrQkFBa0I7UUFDN0IsTUFBTU0sTUFBTTVCLFFBQVF5QixPQUFPLENBQUNJLEtBQUs7UUFDakNELElBQUlGLFFBQVEsR0FBRztRQUNmLE9BQU83QixxREFBWUEsQ0FBQ2lDLFFBQVEsQ0FBQ0Y7SUFDL0I7SUFFQSwyREFBMkQ7SUFDM0QsSUFBSVYsUUFBUWxCLFFBQVF5QixPQUFPLENBQUNDLFFBQVEsS0FBSyxTQUFTO1FBQ2hELE1BQU1FLE1BQU01QixRQUFReUIsT0FBTyxDQUFDSSxLQUFLO1FBQ2pDRCxJQUFJRixRQUFRLEdBQUc7UUFDZixPQUFPN0IscURBQVlBLENBQUNpQyxRQUFRLENBQUNGO0lBQy9CO0lBRUEsT0FBTzNCO0FBQ1Q7QUFFTyxNQUFNOEIsU0FBUztJQUNwQkMsU0FBUztRQUNQOzs7Ozs7S0FNQyxHQUNEO0tBQ0Q7QUFDSCxFQUFDIiwic291cmNlcyI6WyIvaG9tZS9wcm9qZWN0L3NyYy9taWRkbGV3YXJlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZVNlcnZlckNsaWVudCB9IGZyb20gJ0BzdXBhYmFzZS9zc3InXG5pbXBvcnQgeyBOZXh0UmVzcG9uc2UsIHR5cGUgTmV4dFJlcXVlc3QgfSBmcm9tICduZXh0L3NlcnZlcidcblxuXG5jb25zdCBhbGxvd2VkUGF0aHMgPSBbJy8nLCAnL2F1dGgnLCAnL3Byb2ZpbGUnLCAnL3NldHRpbmdzJywgJy9jaGF0cyddXG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtaWRkbGV3YXJlKHJlcXVlc3Q6IE5leHRSZXF1ZXN0KSB7XG4gIGxldCBzdXBhYmFzZVJlc3BvbnNlID0gTmV4dFJlc3BvbnNlLm5leHQoe1xuICAgIHJlcXVlc3QsXG4gIH0pXG5cbiAgY29uc3Qgc3VwYWJhc2UgPSBjcmVhdGVTZXJ2ZXJDbGllbnQoXG4gICAgcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfU1VQQUJBU0VfVVJMISxcbiAgICBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19TVVBBQkFTRV9BTk9OX0tFWSEsXG4gICAge1xuICAgICAgY29va2llczoge1xuICAgICAgICBnZXRBbGwoKSB7XG4gICAgICAgICAgcmV0dXJuIHJlcXVlc3QuY29va2llcy5nZXRBbGwoKVxuICAgICAgICB9LFxuICAgICAgICBzZXRBbGwoY29va2llc1RvU2V0KSB7XG4gICAgICAgICAgY29va2llc1RvU2V0LmZvckVhY2goKHsgbmFtZSwgdmFsdWUgfSkgPT4gcmVxdWVzdC5jb29raWVzLnNldChuYW1lLCB2YWx1ZSkpXG4gICAgICAgICAgc3VwYWJhc2VSZXNwb25zZSA9IE5leHRSZXNwb25zZS5uZXh0KHtcbiAgICAgICAgICAgIHJlcXVlc3QsXG4gICAgICAgICAgfSlcbiAgICAgICAgICBjb29raWVzVG9TZXQuZm9yRWFjaCgoeyBuYW1lLCB2YWx1ZSwgb3B0aW9ucyB9KSA9PlxuICAgICAgICAgICAgc3VwYWJhc2VSZXNwb25zZS5jb29raWVzLnNldChuYW1lLCB2YWx1ZSwgb3B0aW9ucylcbiAgICAgICAgICApXG4gICAgICAgIH0sXG4gICAgICB9LFxuICAgIH1cbiAgKVxuXG4gIC8vINCe0LHQvdC+0LLQu9C10L3QuNC1INGB0LXRgdGB0LjQuCwg0YfRgtC+0LHRiyDQv9GA0LXQtNC+0YLQstGA0LDRgtC40YLRjCDQuNGB0YLQtdGH0LXQvdC40LVcbiAgY29uc3Qge1xuICAgIGRhdGE6IHsgdXNlciB9LFxuICB9ID0gYXdhaXQgc3VwYWJhc2UuYXV0aC5nZXRVc2VyKClcblxuICAvLyDQl9Cw0YnQuNGJ0LXQvdC90YvQtSDQvNCw0YDRiNGA0YPRgtGLIC0g0YLRgNC10LHRg9GO0YIg0LDQstGC0L7RgNC40LfQsNGG0LjQuFxuICBjb25zdCBwcm90ZWN0ZWRSb3V0ZXMgPSBbXVxuICBjb25zdCBpc1Byb3RlY3RlZFJvdXRlID0gcHJvdGVjdGVkUm91dGVzLnNvbWUocm91dGUgPT4gXG4gICAgcmVxdWVzdC5uZXh0VXJsLnBhdGhuYW1lLnN0YXJ0c1dpdGgocm91dGUpXG4gIClcblxuICAvLyDQoNC10LTQuNGA0LXQutGCINC90LXQsNCy0YLQvtGA0LjQt9C+0LLQsNC90L3Ri9GFINC/0L7Qu9GM0LfQvtCy0LDRgtC10LvQtdC5INGBINC30LDRidC40YnQtdC90L3Ri9GFINC80LDRgNGI0YDRg9GC0L7QslxuICBpZiAoIXVzZXIgJiYgaXNQcm90ZWN0ZWRSb3V0ZSkge1xuICAgIGNvbnN0IHVybCA9IHJlcXVlc3QubmV4dFVybC5jbG9uZSgpXG4gICAgdXJsLnBhdGhuYW1lID0gJy9hdXRoJ1xuICAgIHJldHVybiBOZXh0UmVzcG9uc2UucmVkaXJlY3QodXJsKVxuICB9XG5cbiAgLy8g0KDQtdC00LjRgNC10LrRgiDQsNCy0YLQvtGA0LjQt9C+0LLQsNC90L3Ri9GFINC/0L7Qu9GM0LfQvtCy0LDRgtC10LvQtdC5INGBIC9hdXRoINC90LAg0LPQu9Cw0LLQvdGD0Y5cbiAgaWYgKHVzZXIgJiYgcmVxdWVzdC5uZXh0VXJsLnBhdGhuYW1lID09PSAnL2F1dGgnKSB7XG4gICAgY29uc3QgdXJsID0gcmVxdWVzdC5uZXh0VXJsLmNsb25lKClcbiAgICB1cmwucGF0aG5hbWUgPSAnLydcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLnJlZGlyZWN0KHVybClcbiAgfVxuXG4gIHJldHVybiBzdXBhYmFzZVJlc3BvbnNlXG59XG5cbmV4cG9ydCBjb25zdCBjb25maWcgPSB7XG4gIG1hdGNoZXI6IFtcbiAgICAvKlxuICAgICAqIE1hdGNoIGFsbCByZXF1ZXN0IHBhdGhzIGV4Y2VwdCBmb3IgdGhlIG9uZXMgc3RhcnRpbmcgd2l0aDpcbiAgICAgKiAtIF9uZXh0L3N0YXRpYyAoc3RhdGljIGZpbGVzKVxuICAgICAqIC0gX25leHQvaW1hZ2UgKGltYWdlIG9wdGltaXphdGlvbiBmaWxlcylcbiAgICAgKiAtIGZhdmljb24uaWNvIChmYXZpY29uIGZpbGUpXG4gICAgICogLSBwdWJsaWMgZmlsZXMgKGltYWdlcywgZXRjLilcbiAgICAgKi9cbiAgICBcIi8oKD8hX25leHQvc3RhdGljfF9uZXh0L2ltYWdlfGZhdmljb24uaWNvfFxcXFwubmV4dHwuKlxcXFwuKD86c3ZnfHBuZ3xqcGd8anBlZ3xnaWZ8d2VicCkkKS4qKVwiLFxuICBdLFxufVxuIl0sIm5hbWVzIjpbImNyZWF0ZVNlcnZlckNsaWVudCIsIk5leHRSZXNwb25zZSIsImFsbG93ZWRQYXRocyIsIm1pZGRsZXdhcmUiLCJyZXF1ZXN0Iiwic3VwYWJhc2VSZXNwb25zZSIsIm5leHQiLCJzdXBhYmFzZSIsInByb2Nlc3MiLCJlbnYiLCJORVhUX1BVQkxJQ19TVVBBQkFTRV9VUkwiLCJORVhUX1BVQkxJQ19TVVBBQkFTRV9BTk9OX0tFWSIsImNvb2tpZXMiLCJnZXRBbGwiLCJzZXRBbGwiLCJjb29raWVzVG9TZXQiLCJmb3JFYWNoIiwibmFtZSIsInZhbHVlIiwic2V0Iiwib3B0aW9ucyIsImRhdGEiLCJ1c2VyIiwiYXV0aCIsImdldFVzZXIiLCJwcm90ZWN0ZWRSb3V0ZXMiLCJpc1Byb3RlY3RlZFJvdXRlIiwic29tZSIsInJvdXRlIiwibmV4dFVybCIsInBhdGhuYW1lIiwic3RhcnRzV2l0aCIsInVybCIsImNsb25lIiwicmVkaXJlY3QiLCJjb25maWciLCJtYXRjaGVyIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./src/middleware.ts\n");

/***/ })

});